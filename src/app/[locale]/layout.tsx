import type { Metadata } from "next";
import { Montserrat, Noto_Sans_Arabic } from "next/font/google";
import "./globals.css";
import { Footer } from "@/sections";
import NextUIWrapper from "./nextui-wrapper";

// next-intl imports
import { routing } from "@/i18n/routing";
import { notFound } from "next/navigation";
import { getMessages, setRequestLocale } from "next-intl/server";
import { NextIntlClientProvider } from "next-intl";

// Static Rendering
export function generateStaticParams() {
  return routing.locales.map((locale) => ({ locale }));
}

const montserrat = Montserrat({
  subsets: ["latin"],
  fallback: ["Arial", "sans-serif"],
});

const notoSansArabic = Noto_Sans_Arabic({
  subsets: ["arabic"],
  fallback: ["Arial", "san-serif"],
});

export const metadata: Metadata = {
  title: "ARS | Advanced Robotics Systems",
  description: "Generated by create next app",
};

// export default function RootLayout({
// 	children,
// }: Readonly<{
// 	children: React.ReactNode;
// }>) {
// 	return (
// 		<html lang="en">
// 			<body className={montserrat.className}>
// 				<NextUIWrapper>
// 					{children}
// 					<Footer />
// 				</NextUIWrapper>
// 			</body>
// 		</html>
// 	);
// }

export default async function LocaleLayout({
  children,
  params,
}: {
  children: React.ReactNode;
  params: Promise<{ locale: "en" | "ar" }>;
}) {
  // Ensure that the incoming `locale` is valid
  const { locale } = await params;
  if (!routing.locales.includes(locale)) {
    notFound();
  }

  // Enable static rendering
  setRequestLocale(locale);

  // Providing all messages to the client
  // side is the easiest way to get started
  const messages = await getMessages();

  // Converting to Plain Object
  const plainMessages = JSON.parse(JSON.stringify(messages));

  return (
    <html lang={locale} dir={locale === "ar" ? "rtl" : "ltr"}>
      <body
        className={
          locale === "en" ? montserrat.className : notoSansArabic.className
        }
      >
        <NextIntlClientProvider messages={plainMessages}>
          <NextUIWrapper>
            {children}
            <Footer />
          </NextUIWrapper>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
